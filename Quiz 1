#Q2
#include<bits/stdc==.h>
using namespace std;

int main()
{
extern int i;
cout<<i<<"";
{
int i = 10;
cout<<i<<"";
}
return 0;
}

Output
An extern variable is only declared. Hence, no actual memory gets allocated. Accessing it in the cout statement before definition is invalid,
and thus Compilation Error is thrown.

#Q3
const and volatile are independent i.e. it's possible that a variable is defined as both const and volatile.

#Q8
court<<(1<<2+3<<4);
=>(1 << (2+3) << 4)
=>(1 << 5 << 4)
=>((1 << 5) << 4 )
=>(32 << 4)
=>512

#Q13
if(x == 2); x = 0;

=> if(x == 2);  => One statement
=> x = 0 => Second statement

both executes
